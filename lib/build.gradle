plugins {
    id "java-library"
    
    // Type checking & safety
    id "org.checkerframework" version "0.6.42"
}

// Type checking & safety
apply plugin: "org.checkerframework"
checkerFramework {
    skipCheckerFramework = true  // TODO: Re-enable CheckerFramework!!
    checkers = [
            "org.checkerframework.checker.nullness.NullnessChecker",
            "org.checkerframework.checker.units.UnitsChecker"
    ]

    // Stops random CheckerFramework crashes
    incrementalize = false
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
    maven {
        url = "https://mvnrepository.com/artifact/org.apache.commons/commons-compress"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    // Apache Compress (7z, zip, etc)
    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    implementation "org.apache.commons:commons-compress:1.26.2"

    // Dependency for Apache Compress
    // https://mvnrepository.com/artifact/org.tukaani/xz
    implementation "org.tukaani:xz:1.9"
    
    // Jackson (JSON, YAML, etc)
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.1"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
